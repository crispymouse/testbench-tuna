name: Tests and Checks

#
# Primary workflow for various tests and checks.
#

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [trunk]

jobs:
  primary:
    name: Primary
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # ------------------------------------------------------------------------
      # Python & Poetry.



      # - name: Setup Python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: ${{ matrix.python-version }}

      # - name: Cache Poetry installation
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ~/.local/bin/poetry
      #       ~/.local/share/pypoetry
      #     key: poetry-installation-${{ matrix.python-version }}-0

      # - name: Cache Poetry virtualenvs
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.cache/pypoetry
      #     key: poetry-virtualenvs-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}-0

      - name: Setup Poetry
        run: curl -sSL https://install.python-poetry.org | python -

      - run: find $HOME -name '*poetry*'





      # - name: Install Poetry
      #   uses: snok/install-poetry@v1
      #   with:
      #     virtualenvs-create: true
      #     virtualenvs-in-project: true
      #     installer-parallel: true



      # - name: Install venv
      #   if: steps.cache-venv.outputs.cache-hit != 'true'
      #   run: poetry install --no-interaction

      # # ------------------------------------------------------------------------
      # # Tests.

      # - name: Run tests with Pytest
      #   run: poetry run pytest --cov=src/testbench_tuna --cov-report=term-missing:skip-covered tests/

      # - name: Upload coverage to Codecov
      #   if: strategy.job-index == 0
      #   uses: codecov/codecov-action@v3

      # # ------------------------------------------------------------------------
      # # Pre-commit.

      # - name: Pre-commit Cache
      #   if: strategy.job-index == 0
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.cache/pre-commit
      #     key: pre-commit-${{ matrix.python-version }}-0

      # - name: Pre-commit Setup
      #   if: strategy.job-index == 0
      #   run: poetry run pre-commit install

      # - name: Pre-commit
      #   if: strategy.job-index == 0
      #   run: poetry run pre-commit run -v --show-diff-on-failure
